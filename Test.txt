Declaration Var :

صحيح  س = 2 ;

متغير س [ 33 ] ;
##################################################################################################################
Declaration Fun :

صحيح دالة (صحيح س , صحيح ص) 
{

}
##################################################################################################################
Loop :

من ( صحيح ش في   ( س الي ص  + ض  )  ) 
{

}
##################################################################################################################
ConditionStm :

اذا (س <= ص  + ض) 
{

}

اخر
{


}
##################################################################################################################
Assign :

س = ص  (  ض ) ;

 س = ص ;

##################################################################################################################
print :

اطبع (س) ;

اطبع (١٢) ; 

##################################################################################################################
Full Code:

// تعريف الدالة

صحيح دالة (صحيح س) 
{
  // لوب من 2 الي قيمة س

  من ( صحيح ص في ( ٢ الي س / 2 ) ) 
  {
      اذا ( س % ص == 0 ) 
      {
        // ارجع صفر لو الرقم غير اولي

          ارجع 0 ;
      }

      // ارجع واحد لو الرقم اولي

      ارجع 1 ;
  }
}  

صحيح س = 13 ;

صحيح اولي  = دالة ( س ) ;

اولي  = دالة ( ١٢  ) ;

// نطبع القيمة الراجعة من الدالة

اطبع (  اولي) ;





// تعريف الدالة

صحيح دالة (صحيح س , صحيح ع) 
{
   صحيح ص = 1 ;
   صحيح ناتج = 0 ;  
  // لوب من 1 الي قيمة ع
  طالما ( ص =<  س) 
  {
      اذا ( ص % ع == 0 ) 
      {
              ناتج = ناتج + ص ;
      }
      ص = ص + 1 ;
  }
      // ارجع الناتج

      ارجع ناتج  ;
}  

صحيح س = 13 ;

صحيح مجموع = دالة ( س  , 3) ;

// نطبع القيمة الراجعة من الدالة

اطبع (  مجموع ) ;





##################################################################################################################
